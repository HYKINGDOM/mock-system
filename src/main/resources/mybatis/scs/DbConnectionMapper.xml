<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scs.project.scs.dbinfo.mapper.DbConnectionMapper">

    <resultMap type="com.scs.project.scs.dbinfo.domain.DbInfo" id="DbInfoResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="dbConnectName" column="db_connect_name"/>
        <result property="dbAddress" column="db_address"/>
        <result property="dbPort" column="db_port"/>
        <result property="dbUserName" column="db_user_name"/>
        <result property="dbPassword" column="db_password"/>
        <result property="dbType" column="db_type"/>
        <result property="dbEdition" column="db_edition"/>
        <result property="dbState" column="db_state"/>
    </resultMap>


    <select id="getDbConnectInfoByUserId" parameterType="java.lang.Integer" resultMap="DbInfoResult">
        select
            id,
            user_id,
            db_connect_name,
            db_address,
            db_port,
            db_user_name,
            db_password,
            db_type,
            db_edition,
            db_state
        from
            mock_information.db_connect_info
            where user_id = '${_parameter}'
    </select>

    <select id="getDbInfoByDbName" resultMap="DbInfoResult" parameterType="java.util.Map">

        select
            id,
            user_id,
            db_connect_name,
            db_address,
            db_port,
            db_user_name,
            db_password,
            db_type,
            db_edition,
            db_state
        from
            mock_information.db_connect_info
            where user_id = #{userId}
            and db_connect_name = #{parentDbName}
    </select>


    <insert id="insertDbInfo" parameterType="com.scs.project.scs.dbinfo.domain.DbInfo" useGeneratedKeys="true" keyProperty="id">
        insert into mock_information.db_connect_info
            (user_id,
            db_connect_name,
            db_address,
            db_port,
            db_user_name,
            db_password,
            db_type,
            db_edition,
            db_state)
        values(
        #{userId},
        #{dbConnectName},
        #{dbAddress},
        #{dbPort},
        #{dbUserName},
        #{dbPassword},
        #{dbType},
        #{dbEdition},
        1);
    </insert>

    <update id="updateDbInfo" parameterType="com.scs.project.scs.dbinfo.domain.DbInfo" >
        update
	        mock_information.db_connect_info
        set
            db_connect_name = #{dbConnectName},
            db_address = #{dbAddress},
            db_port = #{dbPort},
            db_user_name = #{dbUserName},
            db_password = #{dbPassword},
            db_type = #{dbType},
            db_edition = #{dbEdition},
            db_state = #{dbState}
        where
            id = #{id} and  user_id = #{userId};
    </update>

    <delete id="deleteDbInfo" parameterType="com.scs.project.scs.dbinfo.domain.DbInfo">
        delete
            from
                mock_information.db_connect_info
            where
                id = #{id} and  user_id = #{userId};
    </delete>


</mapper>
