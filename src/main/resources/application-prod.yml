# 数据源配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://localhost:3306/mock_information?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: root
        password: root
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username:
        login-password:
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  # redis 配置
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # 地址
    host: mock-redis
    # 端口，默认为6379 线上为8765
    port: 8765
    # Redis服务器连接密码（默认为空）
    password: pmit123
    # 连接超时时间
    timeout: 500
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 200
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1

#  rabbitmq:
#    host: rabbitmq
#    port: 5672
#    username: pmit
#    password: pmit123
#    # 虚拟主机配置 要与该账户在rabbitMQ的配置相同
#    virtual-host: /
#    template:
#      retry:
#        enabled: true
#      # 触发returnedMessage回调必须设置mandatory=true, 否则Exchange没有找到Queue就会丢弃掉消息, 而不会触发回调
#      mandatory: true
#    listener:
#      direct:
#        retry:
#          enabled: true  # 开始失败重试
#          max-attempts: 5
#          initial-interval: 5000 # 重试间隔时间
#      simple:
#        # 设置应答模式  NONE:自动回调,AUTO:自动检测异常或者超时事件，如果发生则返回noack，消息自动回到队尾，MANUAL:手动回调
#        acknowledge-mode: manual # 手动应答
#        auto-startup: true
#        default-requeue-rejected: false # 不重回队列
#        concurrency: 5
#        max-concurrency: 20
#        prefetch: 1 # 每次只处理一个信息
#        retry:
#          enabled: true
#          max-attempts: 3
#          initial-interval: 5000
#    # 开启confirms回调 P -> Exchange
#    publisher-confirms: true
#    # 开启returnedMessage回调 Exchange -> Queue
#    publisher-returns: true
